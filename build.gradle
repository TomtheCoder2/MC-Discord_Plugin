buildscript {
    ext.kotlin_version = '1.6.10'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

buildscript {
    ext {
        springBootVersion = '2.6.1'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.2' apply false
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

apply plugin: "java"
apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'


version '1.0'

sourceCompatibility = 16
sourceSets.main.java.srcDirs = ["src/"]


repositories {
    maven { url 'https://www.jitpack.io' }
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    mavenCentral()
}

ext {
    springBootVersion = '2.6.1'
}

dependencies {
    implementation 'org.jsoup:jsoup:1.14.3'
    implementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    implementation 'junit:junit:4.13.2'
    compileOnly 'org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT'
//    compileOnly("com.github.fuzzbuck.Mindustry:core:$mindustryVersion")
//    compileOnly("com.github.fuzzbuck.Mindustry:server:$mindustryVersion")
    implementation group: 'org.json', name: 'json', version: '20210307'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'

    compileOnly 'org.springframework.data:spring-data-redis:2.6.0'
    compileOnly('org.glassfish.jersey.core:jersey-client:3.0.3')

    implementation('org.javacord:javacord:3.3.2')
    compileOnly('javax.ws.rs:javax.ws.rs-api:2.1.1')
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation("net.dv8tion:JDA:4.3.0_277")

    runtimeOnly 'org.apache.logging.log4j:log4j-to-slf4j:2.17.0'
    runtimeOnly 'ch.qos.logback:logback-classic:1.2.10'

    // https://mvnrepository.com/artifact/com.github.kevinsawicki/http-request
    implementation group: 'com.github.kevinsawicki', name: 'http-request', version: '6.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'

    runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.3.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"


    // website (for zion)
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.1'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.1'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.32'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.10'
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.2'

    // website2
// https://mvnrepository.com/artifact/org.nanohttpd/nanohttpd
    runtimeOnly group: 'org.nanohttpd', name: 'nanohttpd', version: '2.2.0'

    // spring frame work backend
    implementation("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//    implementation group: 'org.springframework', name: 'spring-webmvc', version: '5.1.1.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: '2.6.2'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.6.2'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.6.2'
    compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '4.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:2.6.2'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '2.6.2'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.22.0'
    implementation 'org.springframework.boot:spring-boot-configuration-processor:2.6.2'
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'


}

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}


test {
    useJUnitPlatform()
}

jar {
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    from files(sourceSets.main.output.classesDirs)
    from files(sourceSets.main.output.resourcesDir)

    from { configurations.runtimeClasspath.collect { it.isDirectory() || !it.name.endsWithAny(".zip", ".jar") ? it : zipTree(it) } }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

//bootJar {
//    launchScript {
//        included = false
//    }
//}

bootJar {
    baseName = "SpringBoot"
    version = '0.0.1'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

// for the springboot for testing
task dist(type: Jar) {
    manifest {
        attributes 'Main-Class': 'main.java.minecraft.plugin.springbackend.test2.SomeTesting'
    }
    from files(sourceSets.main.output.classesDirs)
    from files(sourceSets.main.output.resourcesDir)
    from { configurations.runtimeClasspath.collect { it.isDirectory() || !it.name.endsWithAny(".zip", ".jar") ? it : zipTree(it) } }

    archiveFileName = "SpringBoot.jar"

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
